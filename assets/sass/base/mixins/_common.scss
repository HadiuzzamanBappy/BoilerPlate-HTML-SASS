@use "../../abstracts" as *;

// ==========================
// General Utilities
// ==========================
// Font-style mixin ^
@mixin set-font-style($family: $font-body,
  $size: $body-text-rg,
  $weight: $fw-regular,
  $l-height: $line-height-body,
  $color: $text-primary,
  $align: left,
  $spacing: null,
  $transform: null) {

  font-family: $family, sans-serif;
  font-size: $size;
  font-weight: $weight;
  line-height: $l-height;
  color: $color;
  text-align: $align;

  @if $spacing !=null {
    letter-spacing: $spacing;
  }

  @if $transform !=null {
    text-transform: $transform;
  }
}


// Text Ellipsis Mixin
@mixin set-text-ellipsis($width: 100%) {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
  width: $width;
}

// Text Truncate Mixin
@mixin set-visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
}

// List style Mixin
@mixin set-list-style($list-style-type: none, $margin: 0, $padding: 0, $display: flex) {
  list-style-type: $list-style-type;
  margin: $margin;
  padding: $padding;
  display: $display;
}


// Clearfix Mixin
@mixin set-clearfix {

  &::before,
  &::after {
    display: table;
    content: " ";
  }

  &::after {
    clear: both;
  }
}

//Box-sizing
@mixin set-box-sizing() {
  *,
  *::before,
  *::after {
    box-sizing: border-box;
  }
}

@mixin set-dimension($width, $height: null) {
  width: $width;

  @if $height !=null {
    height: $height;
  }
}

// ==========================
// Styling Utilities
// ==========================
// Box-shadow Mixin
@mixin set-box-shadow($args) {
  -webkit-box-shadow: $args;
  -moz-box-shadow: $args;
  box-shadow: $args;
}

// Custom scroll bars - ^
@mixin set-custom-scrollbar($width: $spacing-0-50, $track-color: transparent, $thumb-color: $primary-32) {
  &::-webkit-scrollbar {
    width: $width;
  }

  &::-webkit-scrollbar-track {
    background: $track-color;
  }

  &::-webkit-scrollbar-thumb {
    background-color: $thumb-color;
    border-radius: $radius-999;
  }
}

// Overflow Scroll Mixin
@mixin set-overflow-scroll {
  overflow: auto;
  -webkit-overflow-scrolling: touch;
}

// Hero Image Mixin
@mixin set-hero-bg-img($image-url, $position: 50% 50%, $repeat: no-repeat, $size: cover) {
  background-image: url($image-url);
  background-position: $position;
  background-repeat: $repeat;
  background-size: $size;
}

// Spacing, Border and Radius Mixin
@mixin set-spacing-border-radius($padding: 0,
  $margin: 0,
  $border: none,
  $border-radius: 0) {
  padding: $padding;
  margin: $margin;
  border: $border;
  border-radius: $border-radius;
}

// Responsive Image Mixin
@mixin set-img-responsive {
  display: block;
  max-width: 100%;
  height: auto;
}

// Rotate Mixin
@mixin set-transform($property) {
  -webkit-transform: $property;
  -moz-transform: $property;
  -ms-transform: $property;
  -o-transform: $property;
  transform: $property;
}

// Calc Mixin
@mixin set-calc($property, $expression) {
  #{$property}: -moz-calc(#{$expression});
  #{$property}: -webkit-calc(#{$expression});
  #{$property}: calc(#{$expression});
}

// Aspect Ratio Mixin
@mixin set-aspect-ratio($width, $height) {
  position: relative;

  &::before {
    content: '';
    display: block;
    padding-top: ($height / $width) * 100%;
  }
}

// Visibility Mixin
@mixin set-visibility($visibility: visible, $display: block, $opacity: 1) {
  visibility: $visibility;
  display: $display;
  opacity: $opacity;
}

// ==========================
// Shapes and Effects
// ==========================
// Triangle Mixin
@mixin triangle($size, $color, $direction) {
  width: 0;
  height: 0;
  border-style: solid;

  @if $direction =='up' {
    border-width: 0 $size $size $size;
    border-color: transparent transparent $color transparent;
  }

  @else if $direction =='down' {
    border-width: $size $size 0 $size;
    border-color: $color transparent transparent transparent;
  }

  @else if $direction =='left' {
    border-width: $size $size $size 0;
    border-color: transparent $color transparent transparent;
  }

  @else if $direction =='right' {
    border-width: $size 0 $size $size;
    border-color: transparent transparent transparent $color;
  }

  @else {
    @warn "Invalid direction '#{$direction}' specified.";
  }
}

// Circle Mixin
@mixin circle($size, $color: transparent) {
  width: $size;
  height: $size;
  border-radius: 50%;
  background-color: $color;
}

// Skew Mixin
@mixin skew($x-angle, $y-angle: 0) {
  transform: skew($x-angle, $y-angle);
}

// Transition Mixin
@mixin set-transition($args) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -o-transition: $args;
  transition: $args;
}

//Divider Mixin ^
@mixin theme-divider($color: $divider) {
  &-v {
    width: 1px;
    height: -webkit-fill-available;
    min-height: 100px;
    background-color: $color;
    margin: 0 !important;
  }

  &-h {
    height: 1px;
    width: -webkit-fill-available;
    min-width: 100px;
    background-color: $color;
    margin: 0 !important;
  }
}

// ==========================
// Animation Utilities
// ==========================
// Keyframe Mixin
@mixin set-keyframe($animation-name) {
  @-webkit-keyframes #{$animation-name} {
    @content;
  }

  @-moz-keyframes #{$animation-name} {
    @content;
  }

  @keyframes #{$animation-name} {
    @content;
  }
}

// Animate Mixin
@mixin set-animate($name, $duration: 1s, $timing-function: ease, $delay: 0s) {
  -webkit-animation: $name $duration $timing-function $delay;
  -moz-animation: $name $duration $timing-function $delay;
  animation: $name $duration $timing-function $delay;
}

// ==========================
// Layout Utilities ^
// ==========================
// Flex Mixin
@mixin set-flex($direction: null, $justify: null, $align: null, $gap: null) {
  display: -webkit-flex;
  display: -moz-flex;
  display: flex;

  @if $direction !=null {
    -webkit-flex-direction: $direction;
    -moz-flex-direction: $direction;
    flex-direction: $direction;
  }

  @if $justify !=null {
    -webkit-justify-content: $justify;
    -moz-justify-content: $justify;
    justify-content: $justify;
  }

  @if $align !=null {
    -webkit-align-items: $align;
    -moz-align-items: $align;
    align-items: $align;
  }

  @if $gap !=null {
    gap: $gap;
  }
}

// Grid Mixin
@mixin set-grid($grid-template-columns: null, $grid-template-rows: null, $gap: null) {
  display: -ms-grid;
  display: -webkit-grid;
  display: grid;

  @if $grid-template-columns !=null {
    -webkit-grid-template-columns: $grid-template-columns;
    -ms-grid-template-columns: $grid-template-columns;
    grid-template-columns: $grid-template-columns;
  }

  @if $grid-template-rows !=null {
    -webkit-grid-template-rows: $grid-template-rows;
    -ms-grid-template-rows: $grid-template-rows;
    grid-template-rows: $grid-template-rows;
  }

  @if $gap !=null {
    -webkit-gap: $gap;
    gap: $gap;
  }
}

// Absolute, Sticky
@mixin set-position($position, $top: null, $right: null, $bottom: null, $left: null, $z-index: null) {
  position: $position;

  // Handle sticky positioning with vendor prefixes
  @if $position =='sticky' {
    position: -webkit-sticky;
    /* Safari */
    position: sticky;
  }

  @if $top !=null {
    top: $top;
  }

  @if $right !=null {
    right: $right;
  }

  @if $bottom !=null {
    bottom: $bottom;
  }

  @if $left !=null {
    left: $left;
  }

  @if $z-index !=null {
    z-index: $z-index;
  }
}

// Responsive Mixin
$breakpoints: (
  sm: $breakpoint-sm,
  md: $breakpoint-md,
  lg: $breakpoint-lg,
  xl: $breakpoint-xl,
  3xl: $breakpoint-2xl,
  4xl: $breakpoint-3xl,
  ) !default;

@mixin responsive($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  }

  @else {
    @warn "Breakpoint '#{$breakpoint}' not found in \$breakpoints map.";
  }
}